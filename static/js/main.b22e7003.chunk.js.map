{"version":3,"sources":["App.jsx","index.jsx"],"names":["initialGoods","App","useState","goods","setGoods","sortType","setSortType","ascending","setAscending","originalOrderReversed","setOriginalOrderReversed","handleSort","type","sortedGoods","stableSort","a","b","localeCompare","length","indexOf","reverse","className","onClick","reversedOriginalOrder","map","good","array","compareFunction","item","index","sort","ReactDOM","render","document","getElementById"],"mappings":"iOAIMA,EAAe,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0DN,oBAAS,GAAnE,mBAAOO,EAAP,KAA8BC,EAA9B,KAEMC,EAAa,SAACC,GAClB,IAAIC,EAAW,YAAOV,GAET,mBAATS,EACFC,EAAcC,EAAW,YAAIX,IAAQ,SAACY,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC7C,WAATJ,IACTC,EAAcC,EAAW,YACnBX,IAAQ,SAACY,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,QAChCf,EAAMgB,QAAQJ,GAAKZ,EAAMgB,QAAQH,OAInCT,GACHM,EAAYO,UAGdhB,EAASS,GACTP,EAAYM,GACZJ,GAAa,GACbE,GAAyB,IAuB3B,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACET,KAAK,SACLS,UAAS,yBAAiC,mBAAbhB,EAAgC,GAAK,YAClEiB,QAAS,kBAAMX,EAAW,mBAH5B,iCAQA,wBACEC,KAAK,SACLS,UAAS,4BAAoC,WAAbhB,EAAwB,GAAK,YAC7DiB,QAAS,kBAAMX,EAAW,WAH5B,4BAQA,wBACEC,KAAK,SACLS,UAAS,6BAAuBZ,GAA0BJ,GAAaE,EAAiB,WAAL,IACnFe,QA1Cc,WACpB,GAAIjB,EACFD,EAAS,YAAID,GAAOiB,WACpBZ,GAAcD,GACdG,GAAyB,OACpB,CACL,IAAMa,EAAwB,UAAIvB,GAAcoB,UAEhDhB,EAASmB,GACTb,GAA0BD,KA8BxB,qBAQA,wBACEG,KAAK,SACLS,UAAS,2BAAsBhB,IAAaE,GAAaE,EAAwB,GAAK,YACtFa,QArCY,WAClBlB,EAASJ,GACTM,EAAY,IACZE,GAAa,GACbE,GAAyB,IA8BrB,sBASF,6BACGP,EAAMqB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAASA,EAAxB,SACGA,GADMA,YASbX,EAAa,SAACY,EAAOC,GAAR,OAA4BD,EAC5CF,KAAI,SAACI,EAAMC,GAAP,MAAkB,CAAED,OAAMC,YAC9BC,MAAK,SAACf,EAAGC,GAAJ,OAAUW,EAAgBZ,EAAEa,KAAMZ,EAAEY,OAASb,EAAEc,MAAQb,EAAEa,SAC9DL,KAAI,qBAAGI,SChHVG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b22e7003.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nconst initialGoods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goods, setGoods] = useState(initialGoods);\n  const [sortType, setSortType] = useState('');\n  const [ascending, setAscending] = useState(true);\n  const [originalOrderReversed, setOriginalOrderReversed] = useState(false);\n\n  const handleSort = (type) => {\n    let sortedGoods = [...goods];\n\n    if (type === 'alphabetically') {\n      sortedGoods = stableSort([...goods], (a, b) => a.localeCompare(b));\n    } else if (type === 'length') {\n      sortedGoods = stableSort(\n        [...goods], (a, b) => a.length - b.length\n        || goods.indexOf(a) - goods.indexOf(b),\n      );\n    }\n\n    if (!ascending) {\n      sortedGoods.reverse();\n    }\n\n    setGoods(sortedGoods);\n    setSortType(type);\n    setAscending(true);\n    setOriginalOrderReversed(false);\n  };\n\n  const handleReverse = () => {\n    if (sortType) {\n      setGoods([...goods].reverse());\n      setAscending(!ascending);\n      setOriginalOrderReversed(false);\n    } else {\n      const reversedOriginalOrder = [...initialGoods].reverse();\n\n      setGoods(reversedOriginalOrder);\n      setOriginalOrderReversed(!originalOrderReversed);\n    }\n  };\n\n  const handleReset = () => {\n    setGoods(initialGoods);\n    setSortType('');\n    setAscending(true);\n    setOriginalOrderReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === 'alphabetically' ? '' : 'is-light'}`}\n          onClick={() => handleSort('alphabetically')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === 'length' ? '' : 'is-light'}`}\n          onClick={() => handleSort('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${originalOrderReversed || !sortType || !ascending ? '' : 'is-light'}`}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-danger ${sortType || !ascending || originalOrderReversed ? '' : 'is-light'}`}\n          onClick={handleReset}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst stableSort = (array, compareFunction) => array\n  .map((item, index) => ({ item, index }))\n  .sort((a, b) => compareFunction(a.item, b.item) || a.index - b.index)\n  .map(({ item }) => item);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}