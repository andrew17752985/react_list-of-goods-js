{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","initialGoods","useState","goods","setGoods","sortOrder","setSortOrder","isReversed","setIsReversed","handleSort","order","sortedGoods","sort","a","b","localeCompare","length","reverse","showResetButton","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAM,WACjB,IAAMC,EAAe,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGF,EAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,WAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAa,SAACC,GAClB,IAAIC,EAAW,YAAOR,GAEtB,OAAQO,GACN,IAAK,eACHC,EAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3C,MACF,IAAK,SACHH,EAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACxC,MACF,IAAK,UACHL,EAAYM,UACZ,MACF,IAAK,UACHN,EAAcV,EAMdM,GACFI,EAAYM,UAGdb,EAASO,GACTL,EAAaI,IAGTQ,EAAgC,YAAdb,EAExB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CAAE,WAA0B,iBAAdhB,IACtDiB,QAAS,WACPb,EAAW,gBACPF,GACFC,GAAeD,IANrB,iCAaA,wBACEa,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CAAE,WAA0B,WAAdhB,IACzDiB,QAAS,WACPb,EAAW,UACPF,GACFC,GAAeD,IANrB,4BAaA,wBACEa,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAAE,YAAad,GAA4B,YAAdF,IAC3EiB,QAAS,WACPb,EAAyB,YAAdJ,EAA0B,UAAY,WACjDG,GAAeD,IALnB,qBAWCW,GACC,wBACEE,KAAK,SACLD,UAAU,mBACVG,QAAS,WACPb,EAAW,WACPF,GACFC,GAAeD,IANrB,sBAeJ,6BACGJ,EAAMoB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC7GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.06af4707.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => {\n  const initialGoods = [\n    'Dumplings',\n    'Carrot',\n    'Eggs',\n    'Ice cream',\n    'Apple',\n    'Bread',\n    'Fish',\n    'Honey',\n    'Jam',\n    'Garlic',\n  ];\n\n  const [goods, setGoods] = useState(initialGoods);\n  const [sortOrder, setSortOrder] = useState('initial');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleSort = (order) => {\n    let sortedGoods = [...goods];\n\n    switch (order) {\n      case 'alphabetical':\n        sortedGoods.sort((a, b) => a.localeCompare(b));\n        break;\n      case 'length':\n        sortedGoods.sort((a, b) => a.length - b.length);\n        break;\n      case 'reverse':\n        sortedGoods.reverse();\n        break;\n      case 'initial':\n        sortedGoods = initialGoods;\n        break;\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      sortedGoods.reverse();\n    }\n\n    setGoods(sortedGoods);\n    setSortOrder(order);\n  };\n\n  const showResetButton = sortOrder !== 'initial';\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', { 'is-light': sortOrder !== 'alphabetical' })}\n          onClick={() => {\n            handleSort('alphabetical');\n            if (isReversed) {\n              setIsReversed(!isReversed);\n            }\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', { 'is-light': sortOrder !== 'length' })}\n          onClick={() => {\n            handleSort('length');\n            if (isReversed) {\n              setIsReversed(!isReversed);\n            }\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', { 'is-light': !isReversed && sortOrder !== 'reverse' })}\n          onClick={() => {\n            handleSort(sortOrder === 'reverse' ? 'initial' : 'reverse');\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {showResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={() => {\n              handleSort('initial');\n              if (isReversed) {\n                setIsReversed(!isReversed);\n              }\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}